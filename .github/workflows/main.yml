name: Train and Push ML Model

on:
  push:
    paths:
      - 'MLProject/**'
  workflow_dispatch:

jobs:
  train-model:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: mlflow-env
          environment-file: MLProject/conda.yaml
          auto-activate-base: false

      - name: Install MLflow
        run: pip install mlflow

      - name: Run MLflow Project
        run: mlflow run MLProject
        shell: bash -l {0}

      - name: Get MLflow model from artifacts path
        id: get_model
        run: |
          MODEL_PATH=$(find mlruns -type d -path '*/artifacts/rf_classifier_model' | head -n 1)
          if [ -z "$MODEL_PATH" ]; then
            echo "Model not found. Exiting..."
            exit 1
          fi
          if [ ! -f "$MODEL_PATH/MLmodel" ]; then
            echo "MLmodel file not found in model directory. Exiting..."
            exit 1
          fi
          echo "MODEL_PATH=$MODEL_PATH" >> $GITHUB_ENV
          echo "Model path set to: $MODEL_PATH"

      - name: Build Docker image
        run: mlflow models build-docker -m ${{ env.MODEL_PATH }} -n diabetes-model

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker image
        run: |
          docker tag diabetes-model:latest ${{ secrets.DOCKER_USERNAME }}/diabetes-model:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/diabetes-model:latest

      - name: Commit and push model artifacts
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git commit --allow-empty -m "Artifacts uploaded and Docker image pushed from workflow run [skip ci]" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
